server {
    
    server_name doh-ca.amanoteam.com;
    
    listen 443 ssl;
    listen [::]:443 ssl;
    
    listen 443 http2;
    listen [::]:443 http2;
    
    access_log off;
    error_log off;
    
    ssl_certificate /etc/letsencrypt/live/doh-ca.amanoteam.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/doh-ca.amanoteam.com/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;
    
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;
    
    ssl_stapling on;
    ssl_stapling_verify on;
    
    ssl_trusted_certificate /etc/letsencrypt/live/doh-ca.amanoteam.com/chain.pem;
    
    more_set_headers 'X-Content-Type-Options: nosniff';
    more_set_headers 'X-Frame-Options: DENY';
    more_set_headers 'X-XSS-Protection: 1; mode=block';
    more_set_headers 'Referrer-Policy: no-referrer';
    more_set_headers "Content-Security-Policy: default-src 'none'; frame-ancestors 'none'";
    more_set_headers 'Strict-Transport-Security: max-age=31536000; preload';
    more_set_headers 'Alt-Svc: $http2=":443"; ma=3600';
    
    location / {
        
        return 301 https://github.com/AmanoTeam/AmnDNS;
        
    }
    
    location /dns-query {
    
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    
        proxy_pass http://0.0.0.0:8053;
        proxy_read_timeout 10;
        proxy_connect_timeout 5;
    
    }
    
    location = /robots.txt {
        return 200 "User-agent: *\nDisallow: /\n";
    }
    
    resolver 0.0.0.0;
    resolver_timeout 5s;

    client_max_body_size 500k;
    
}

server {
    
    server_name doh-ca.amanoteam.com;
    
    listen 80;
    listen [::]:80;
    
    return 301 https://$host$request_uri;
    
}